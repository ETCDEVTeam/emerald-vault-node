os:
  - osx
  - linux
  - windows

language: node_js

node_js:
  - node
  - 11
  - 10

cache:
  directories:
    - $HOME/.cargo
    - $TRAVIS_BUILD_DIR/native/target
    - $TRAVIS_BUILD_DIR/node_modules

addons:
  apt:
    packages:
      - libusb-1.0-0-dev

env:
  global:
    - PATH="$HOME/.cargo/bin:$PATH"
    - RUSTFLAGS="-C target-feature=+crt-static"
    - RUST_BACKTRACE=1
  matrix:
    - NODE_RUNTIME=electron
    - NODE_RUNTIME=node

before_install:
  # Install Rust and Cargo
  - curl https://sh.rustup.rs -sSf > /tmp/rustup.sh
  - sh /tmp/rustup.sh -y
  # Install NPM packages
  - node -v
  - npm -v

install:
  - npm install

script:
  - if [[ ${NODE_RUNTIME} -eq "node" ]]; then      npm run build:rs;            fi;
  - if [[ ${NODE_RUNTIME} -eq "electron" ]]; then  npm run build:rs:electron;   fi;

  -  node-pre-gyp reveal
  - if [[ ${NODE_RUNTIME} -eq "node" ]]; then      npm test;                    fi;
  - if [[ ${NODE_RUNTIME} -eq "electron" ]]; then  npm run clean:rs;            fi;

  - if [[ ${NODE_RUNTIME} -eq "node" ]]; then      npm run package:node;        fi;
  - if [[ ${NODE_RUNTIME} -eq "electron" ]]; then  npm run package:electron;    fi;

  # Publish when using 'publish binary' keywords
  - COMMIT_MESSAGE=$(git log --format=%B --no-merges -n 1 | tr -d '\n')
  - if [[ ${COMMIT_MESSAGE} =~ "publish binary" ]]; then npm run upload-binary || exit 0; fi;