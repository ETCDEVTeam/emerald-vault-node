os:
  - osx
  - linux
  - windows

language: node_js

node_js:
  - 12

cache:
  directories:
    - $HOME/.cargo
    - $TRAVIS_BUILD_DIR/native/target
    - $TRAVIS_BUILD_DIR/node_modules

addons:
  apt:
    packages:
      - libusb-1.0-0-dev

env:
  global:
    - PATH="$HOME/.cargo/bin:$PATH"
    - RUSTFLAGS="-C target-feature=+crt-static"
    - RUST_BACKTRACE=1
    - YARN_GPG=no # otherwise Yarn starts a GPG daemon which prevents builds from finishing on Windows
  matrix:
    - NODE_RUNTIME=electron
    - NODE_RUNTIME=node

before_install:
  # Install Rust and Cargo
  - curl https://sh.rustup.rs -sSf > /tmp/rustup.sh
  - sh /tmp/rustup.sh -y
  - if [[ ${TRAVIS_OS_NAME} == "windows" ]]; then rustup toolchain install stable-msvc && rustup target install x86_64-pc-windows-msvc && rustup set default-host x86_64-pc-windows-msvc; fi
  # Show details about current system
  - rustup show
  - node -v
  - npm -v
  - yarn global bin
  # system details
  - if [[ ${TRAVIS_OS_NAME} == "windows" ]]; echo %PATH%; fi;

install:
  - yarn install
  - yarn global add electron@7.1.14

script:
  #- if [[ ${NODE_RUNTIME} == "electron" ]]; then  yarn workspace @emeraldpay/emerald-vault-native run version:electron;  fi;
  #  - electron --version
  - if [[ ${TRAVIS_OS_NAME} == "windows" ]]; echo C:\Users\travis\AppData\Local\Yarn\bin\electron --version; fi;

  # Build Rust
#  - if [[ ${NODE_RUNTIME} == "node" ]]; then      yarn workspace @emeraldpay/emerald-vault-native run build:rs;          fi;
#  - if [[ ${NODE_RUNTIME} == "electron" ]]; then  yarn workspace @emeraldpay/emerald-vault-native run build:rs:electron; fi;

  # Show details about node module
  - node-pre-gyp reveal --directory packages/native

  # Build Typescript
  - yarn workspaces run build:ts;

  # Run tests
  - yarn workspace @emeraldpay/emerald-vault-core run test;
  - if [[ ${NODE_RUNTIME} == "node" ]]; then      yarn workspace @emeraldpay/emerald-vault-native run test;              fi;
  - if [[ ${NODE_RUNTIME} == "electron" ]]; then  yarn workspace @emeraldpay/emerald-vault-native run test:electron;     fi;

  # Cleanup to avoid putting temp files into resulting package
  - if [[ ${NODE_RUNTIME} == "electron" ]]; then  yarn workspace @emeraldpay/emerald-vault-native run clean:rs;          fi;

  # Package for pre-gyp
  - if [[ ${NODE_RUNTIME} == "node" ]]; then      yarn workspace @emeraldpay/emerald-vault-native run package:node;      fi;
  - if [[ ${NODE_RUNTIME} == "electron" ]]; then  yarn workspace @emeraldpay/emerald-vault-native run package:electron;  fi;

  # Publish when using 'publish binary' keywords
  - COMMIT_MESSAGE=$(git log --format=%B --no-merges -n 1 | tr -d '\n')
  - if [[ ${COMMIT_MESSAGE} =~ "publish binary" ]]; then yarn workspace @emeraldpay/emerald-vault-native run upload-binary || exit 0; fi;