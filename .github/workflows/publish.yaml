name: Publish package

on:
  release:
    types: [created]
  pull_request:

jobs:
#  npm:
  #    name: Publish to NPM
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Checkout the code
  #        uses: actions/checkout@v2
  #        with:
  #          ref: ${{ github.ref }}
  #
  #      - name: Install Node.js
  #        uses: actions/setup-node@v2
  #        with:
  #          node-version: "16.x"
  #          always-auth: true
  #
  #      - name: Configure NPM
  #        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
  #
  #      - name: Install Rust
  #        uses: actions-rs/toolchain@v1
  #        with:
  #          profile: minimal
  #          toolchain: stable
  #          override: true
  #
  #      - name: Instal system libs
  #        run: sudo apt-get install libusb-1.0-0-dev
  #
  #      - name: Instal JS dependencies
  #        run: yarn install
  #
  #      - name: Configure Node.js Path
  #        run: npm config set scripts-prepend-node-path true
  #
  #      - name: Publish to NPM - core
  #        run: npm publish --access=public
  #        working-directory: packages/core
  #
  #      - name: Publish to NPM - native
  #        run: npm publish --access=public
  #        working-directory: packages/native
  #        env:
  #          NO_NPM_BINARY: "true"

  prebuilds:
  #  needs: npm
    name: Upload binary for (${{ matrix.os }}, ${{ matrix.node }})
    strategy:
      matrix:
        node: [ "electron", "node" ]
        # windows-2016 - because windows-latest comes with MSVC++ 14.25 (Visual Studio 2019 Version 16.5), which is
        # incompatible with librocksdb-sys v5.18.3
        os: [ "windows-2016", "macos-latest", "ubuntu-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Instal LLVM (windows)
        run: choco install -y llvm
        if: runner.os == 'Windows'

      - name: Instal system libs (not windows)
        run: sudo apt-get install libusb-1.0-0-dev
        if: runner.os == 'Linux'

      - name: Install build tools (windows)
        run: choco install -y visualcpp-build-tools
        if: runner.os == 'Windows'

      - name: Instal JS dependencies
        run: yarn install

      - name: Build Rust lib (windows)
        run: yarn workspace @emeraldpay/emerald-vault-native run build:rs:${{ matrix.node }}
        if: runner.os == 'Windows'
        env:
          # dynamic linkage may be a problem for Windows users who would need to install some extra DLLs just to make Emerald works
          # so better to link them statically.
          RUSTFLAGS: "-C target-feature=+crt-static"
          RUST_BACKTRACE: "1"

      - name: Build Rust lib (not windows)
        run: yarn workspace @emeraldpay/emerald-vault-native run build:rs:${{ matrix.node }}
        if: runner.os != 'Windows'
        env:
          RUST_BACKTRACE: "1"
          # support macOS High Sierra
          MACOSX_DEPLOYMENT_TARGET: "10.13"

      - name: Show lib details
        run: |
          node_modules/@mapbox/node-pre-gyp/bin/node-pre-gyp reveal --directory packages/native
          ls packages/native/native

      - name: Build Typescript
        run: yarn workspaces run build:ts

      # Cleanup to avoid putting temp files into resulting package
      - name: Clean Before Package
        run: yarn workspace @emeraldpay/emerald-vault-native run clean:rs
        if: matrix.node == 'electron'

      - name: Package
        run: yarn workspace @emeraldpay/emerald-vault-native run package:${{ matrix.node }}

      - name: Upload
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: ./packages/native/build/stage/*/*.tar.gz
          file_glob: true
